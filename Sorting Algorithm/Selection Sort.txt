The idea behind this algorithm is pretty simple. We divide the array into two parts sorted and
unsorted.
The left part is sorted subarray and right part is the unsorted subarray.

#include<bits/stdc++.h>
using namespace std;

int findminindex(vector<int> A, int start)
{
  int min_index = start;
  while(start<int(A.size())
  {
   if(A[start] < A[min_index]) 
    {
        min_index=start;
       ++start;
    }
   }
}


void selectionsort(vector<int> A)
{
  for(int i=0; i<A.size(); i++)
  {
      int min_index = findminindex(A, i);
      if(i!=min_index)
      {
       swap(A[i], A[min_index];
      }
  }
}