// inspired by lcs

class Solution {
	public:
	int lcsutil(string a,string b, int n, int m)
	{
	    int dp[m+1][n+1];
	    memset(dp, 0, sizeof(dp));
	    
	    for(int i=0; i<=m; i++)
	    {
	        for(int j=0; j<=n; j++)
	        {
	            if(i==0 || j==0)
	            {
	                dp[i][j]=0;
	            }
	            else if(a[i-1]==b[j-1] && i!=j)
	            {
	                dp[i][j]= 1+ dp[i-1][j-1];
	            }
	            else
	            {
	                dp[i][j]=max(dp[i-1][j], dp[i][j-1]);
	            }
	            
	        }
	    }
	   return dp[m][n]; 
	    
	}
	int LongestRepeatingSubsequence(string str)
	{
         int m = str.size();
         
         return lcsutil(str, str, m, m);
	}

};
