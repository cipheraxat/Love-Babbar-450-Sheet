//naive
class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        // your code here
       unordered_set<Node*> s;
       Node* curr=head;
       
       while(curr)
       {
           if(s.find(curr)!=s.end())
           {
               return true;
           }
           
           s.insert(curr);
           curr=curr->next;
       }
       
      return false; 
    }
};



//optimised
class Solution
{
    public:
    //Function to check if the linked list has a loop.
    bool detectLoop(Node* head)
    {
        // your code here
        Node* fast=head;
        Node* slow=head;
        
        while(fast && slow && fast->next)
        {
            fast=fast->next->next;
            slow=slow->next;
            if(fast==slow)
            {
                return true;
            }
        }
        
       
    
      return false;    
    }
};
